#!/usr/bin/env sh

# set -x

. ./config

updatesources(){
# cat << EOF
cat > /etc/apt/sources.list << EOF
deb http://deb.debian.org/debian/ ${RELEASE} main non-free contrib
deb-src http://deb.debian.org/debian/ ${RELEASE} main non-free contrib

deb http://deb.debian.org/debian/ ${RELEASE}-updates main contrib non-free
deb-src http://deb.debian.org/debian/ ${RELEASE}-updates main contrib non-free
EOF

	clear
cat << EOF
	Upadating system
	-----------------

EOF

apt update >/dev/null 2>&1
apt upgrade -y >/dev/null 2>&1

}

installationloop(){
	while IFS=, read -r tag program; do
		case "$tag" in
			"G")	groupinstall "$program" ;;
			"M")	makeinstall "$program" ;;
			"P")	pipinstall "$program" ;;
			"A")	aptinstall "$program" ;;
			*)		sh src/scripts/"$program" ;;
		esac
	done < src/progs.list ;
}

aptinstall(){
	clear
cat << EOF
	Installing package ${1}
	-----------------------------------

EOF

	apt install --no-install-recommends -y "$1" >/dev/null 2>&1
}

groupinstall(){
	clear
cat << EOF
	Installing group ${1}
	-----------------------------------

EOF
	apt install --no-install-recommends -y $(cat src/installgroups/$1) >/dev/null 2>&1
}

pipinstall(){
	clear
cat << EOF
	pip-Installing ${1}
	-----------------------------------

EOF
	pip3 install "$1" >/dev/null 2>&1
}

makeinstall(){
	clear
cat << EOF
	Installing via make: ${1}
	-----------------------------------

EOF
	git clone "$1" && cd $(basename "$1")
	make >/dev/null 2>&1
	make clean install >/dev/null 2>&1
	cd ..

}

installgtk(){
	mkdir -p /usr/share/{themes,icons}
	tar -xf src/gtk/nordic-icons.tar -C /usr/share/icons
	tar -xf src/gtk/nordic-theme.tar -C /usr/share/themes
}

editsudoers(){
	chmod +w /etc/sudoers

# cat << EOF
cat >> /etc/sudoers << EOF

# generated by tbdi
%sudo ALL = NOPASSWD: /bin/mount, /bin/umount
%sudo ALL = NOPASSWD: /usr/bin/apt update, /usr/bin/apt search
EOF
	chmod -w /etc/sudoers
}

userconfig(){
	chsh -s /bin/zsh ${USER}
	su $USER -c 'mkdir -p $HOME/{dl,temp,work,mm}'
	su $USER -c 'mkdir -p $HOME/mnt/cell{1,2}'
	su $USER -c 'mkdir -p $HOME/.local/{share,bin,repos,opt}'
	su $USER -c 'cd $HOME/.local/repos && git clone https://github.com/rassil0n/dots'
	su $USER -c 'rsync -r $HOME/.local/repos/dots/ $HOME'
	su $USER -c 'sh $HOME/.local/bin/setbg'

	CRONFILE=/home/${USER}/.config/cronjobs

cat >> $CRONFILE << EOF
SHELL=/bin/sh
0 * * * *       /home/${USER}/.local/bin/cron/rsscheck > /dev/null
0 */4 * * *     /home/${USER}/.local/bin/cron/updatecheck 2> /dev/null
0 */4 * * *     /home/${USER}/.local/bin/cron/weathercheck 2> /dev/null
*/30 * * * *    /home/${USER}/.local/bin/cron/batcheck 2> /dev/null
EOF

	chown ${USER} ${CRONFILE}
	chgrp ${USER} ${CRONFILE}
	su $USER -c 'crontab - < ${CRONFILE}'
}

setupsshkey(){
cat << EOF
	Setup SSH-Key for ${USER}
	-----------------------------
EOF

echo -n "Please enter your email: "
read USERMAIL
su $USER -c 'ssh-keygen -t ed25519 -C ""$USERMAIL""'
}

initdoas(){
cat >> /usr/local/etc/doas.conf << EOF
# generated by tbdi
permit keepenv $USER as root
permit nopass $USER as root cmd umount
permit nopass $USER as root cmd mount
permit nopass $USER as root cmd apt args update
EOF
}

updatesources
installationloop
installgtk
editsudoers
userconfig
setupsshkey
initdoas
